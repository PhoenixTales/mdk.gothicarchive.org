/* design by flosha */

/* Base */

@font-face {
  font-family: "IBM VGA 8x16";
  src: url("/_img/fonts/ibm-vga-8x16.woff") format('woff');
  font-weight: normal;
  font-style: normal;
  font-display: block;
  font-size: 16px;
}

*,
::before,
::after {
  box-sizing: border-box;
}

html {
  background-color: #000;
  color: #7a7875;
  font-family: SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;
  padding: 0;
  margin: 0;
}

body {
  display: flex;
  padding: 0 4em;
  margin: 0;
  gap: 5em;
  align-items: stretch;
  font-size: 12px;
  line-height: 1.4;
}

h1 {
  font-size: inherit;
}

h2 {
  font-size: 12px;
  font-weight: normal;
}

/*
h1{font-family:verdana,helvetica;font-size:16pt;}
h2{font-family:verdana,helvetica;font-size:14pt;}*/
h3 {
  font-family: serif;
  font-size: 12pt;
}

h4 {
  font-family: serif;
  font-size: 10pt;
}

img {
  max-width: 100%;
}

pre {
  max-width: 100%;
  white-space: pre-wrap;
}

::selection {
  background: #2d3a34;
}

ul {
  list-style: none;
  padding-left: 12px;
}

/* Base - Links */

/*
a:link{ color: #84bc9a; }
a:visited { color: #84bc9a; }
a:active { color: #505a53; }
*/

a:link,
a:visited {
  color: #a1a582;
}

a:active {
  color: #505a53;
}

a,
a:link,
a:active,
a:visited {
  text-decoration: none;
  transition: all 0.3s ease-out;
}

a:hover {
  text-decoration: underline;
}

/* .pt class is not used */
/* a.pt:link {
  color: #fdc698;
} */

a img {
  opacity: 1;
  transition: .4s ease-in-out;
}

a:hover img {
  opacity: 0.6;
}

/* Base - Scrollbar */

@supports not selector(::-webkit-scrollbar) {

  nav,
  html {
    scrollbar-color: #424242 #101010;
  }
}

*::-webkit-scrollbar {
  background: #101010;
}

/*
*::-webkit-scrollbar-track-piece {
  background-color: rgba(0 0 0 / 70%);
}
*/

*::-webkit-scrollbar-track {
  background: #101010;
}

*::-webkit-scrollbar-thumb {
  background-color: #424242;
  border: 2px solid black;
}

/* Nav */

nav {
  width: 300px;
  padding: 48px 12px;
  flex-shrink: 0;
}

nav ul li {
  font-size: 16px;
  font-family: monospace;
}

nav h2 {
  margin-top: 5em;
  text-transform: uppercase;
  letter-spacing: 0.2em;
  font-size: 0.8rem;
}

.menu-bar,
#menu-toggle {
  display: none;
}

header {
  font-size: 16px;
  /*margin: 0 auto;*/
  font-family: "IBM VGA 8x16", monospace;
}

header img {
  max-width: 220px;
  aspect-ratio: 325/257;
}

header h1 {
  font-weight: inherit;
  margin: 1em 1em 2em;
  border: 1px solid #464646;
  padding: 0.5em;
  display: block;
  text-align: center;
  max-width: 200px;
}

/*
header a:link h1:hover {
  color: #b6b2a3;
}

header a:visited {
  color: #b6b2a3;
}
*/

header a:link {
  text-decoration: none;
}

header a:visited {
  text-decoration: none;
}

header a:hover {
  color: #9a5050;
}

.download {
  margin-top: 48px;
  border: 1px solid #464646;
}

.download p {
  text-align: center;
  padding: 1em 0 1.4em;
  margin: 0;
}

/*
.download p:hover {
  background: #191919;
}
*/

.download a:link {
  text-decoration: none;
  color: #a1a582;
}

.download a:hover {
  color: #9a5050;
}

.download h2 {
  margin-bottom: 0;
  margin-top: -0.8em;
  margin-left: 1em;
  padding: 0 1em;
  background: #000;
  display: inline-block;
}

/* .selected class is not used. */
/* .selected {
  font-weight: bold;
} */

.phoenix-ascii {
  max-width: 100px;
  display: block;
  margin: 4em auto;
}

/* Style <ul> and <li> as Tree View */

ul.copyright {
  margin: 1em 0;
  padding: 0;
}

ul.copyright li {
  font-size: 10px;
  color: #393939;
  text-align: center;
}

/* Article/Content */

main {
  max-width: 100%;
  padding: 0 4em;
}

.article,
.article p,
.article li,
.article table,
.article tr,
.article td,
.article th {
  font-family: verdana, helvetica;
  font-size: 10pt;
}

.content {
  font-family: "Verdana, Arial, Helv, Helvetica, SanSerif";

  margin: 4em 0;
  max-width: 500px;
}

.index,
.content {
  margin: 4em 0 1em;
  max-width: 500px;
  min-width: 400px;
}

.index table,
.content table {
  width: 100%;
  margin-bottom: 1.5em;
}

.content pre {
  padding: 0;
  margin: 0;
  font-family: monospace;
  font-size: 8pt;
}

.about {
  margin: 2em 0;
  max-width: 500px;
  padding: 1em;
  border: 1px solid #464646;
}

.about h2 {
  display: inline-block;
  padding: 0 0.2em;
  margin-top: -1.8em;
  /*background: #000;*/
  text-transform: uppercase;
  color: #9a5050;
  letter-spacing: 0.4em;
}

/* .tools class is not used. */
/* .tools img {
  width: 47px;
} */

.showroom {
  display: flex;
  flex-flow: row wrap;
  gap: 1em;
  margin: 5em 0;
  align-content: flex-start;
}

.showroom img {
  max-width: 250px;
  max-height: 250px;
  object-fit: cover;
  margin: 0;
}

/* .hub class is not used */
/* .hub a:link {
  color: #ac876d;
}

.hub a:visited {
  color: #ac876d;
} */

/* red text for notes of primary importance */
.primenote {
  color: #9a5050;
}

/* blue text for notes of secondary importance */
.secnote {
  color: #7ca6cf;
}

/* important table */
.imptable {
  background: #a1a582;
  color: #000;
}

.imptable a:visited {
  color: #003972;
}

.cmd {
  font-family: Courier New;
  font-size: 12pt;
}

.ende {
  font-family: verdana, helvetica;
  font-size: 8pt;
  text-align: center;
}

footer {
  width: 100%;
  padding: 1em 1em;
  font-size: 15px;
  text-transform: uppercase;
  display: flex;
  font-family: "IBM VGA 8x16", monospace;
}

/* Mobile Screen */

@media only screen and (max-width: 920px) {
  body {
    padding: 0;
    flex-direction: column;
    align-items: center;
    gap: 0;
  }

  body:has(#menu-toggle:checked) {
    overflow: hidden;
  }

  nav {
    height: initial;
    overflow: initial;
    /* Having this set to "initial", makes it so the scroll position will be restored when the mobile navigation is opened again, otherwise it is reset each time the .main-nav is closed. (For some reason) */
    width: 100%;
    margin: 0;
  }

  body:has(#menu-toggle:checked) nav {
    height: 100dvh;
    overflow: auto;
    position: fixed;

    /* Set these styles only when opening the nav, because otherwise, due to the backdrop-filter property, a stacking context will be formed, and with it the nav element will become the containing block of the elements like .menu-bar, and it won't act as a fixed element relative to the viewport anymore, but to the nav itself. */
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    background: rgba(0, 0, 0, 0.8);
  }

  body:has(#menu-toggle:checked) nav,
  .menu-bar {
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    background: rgba(0, 0, 0, 0.8);
  }

  .menu-bar {
    display: block;
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    z-index: 10;
    line-height: 1;
    padding: 8px 0;
  }

  body:has(#menu-toggle:checked) .menu-bar {
    position: sticky;
    top: 0;
    box-shadow: 0 30px 40px rgba(31, 22, 22, 0.1);
  }

  label[for="menu-toggle"] {
    display: flex;
    gap: 5px;
    align-items: center;
    text-transform: uppercase;
    padding-left: 1em;
    color: #a1a582;
    font-size: 18px;
    /*border: 1px solid;*/
    user-select: none;
    cursor: pointer;
  }

  label[for="menu-toggle"]::selection {
    background-color: transparent;
    color: inherit;
  }

  .menu-icon {
    font-size: 150%;
  }

  .menu-title {
    padding-top: 2px;
  }

  header {
    display: flex;
    flex-direction: column;
    align-items: center;
    /* 43px is the "intrinsic" height of the .menu-bar, so it should be changed in case the btn's height is changed */
    margin-top: 43px;
  }

  body:has(#menu-toggle:checked) header {
    margin-top: 0;
  }

  header h1 {
    margin: 0 1em 2em;
  }

  .menu-index {
    display: none;
  }

  body:has(#menu-toggle:checked) .menu-index {
    display: block;
  }

  .download {
    margin-left: 1em;
    margin-right: 1em;
  }

  main {
    padding: 0 1em;
  }

  .index,
  .content {
    min-width: initial;
  }

  footer {
    padding: 0 0.5em;
    display: flex;
    justify-content: center;
  }
}